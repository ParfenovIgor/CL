/* File generated by the BNF Converter (bnfc 2.9.4). */

#ifndef PARSER_HEADER_FILE
#define PARSER_HEADER_FILE

#include<vector>
#include<string>
#include<cstdio>
#include "Absyn.H"


Program* pProgram(FILE *inp);
Program* pProgram(const char *str);
ListExpr* pListExpr(FILE *inp);
ListExpr* pListExpr(const char *str);
Expr* pExpr8(FILE *inp);
Expr* pExpr8(const char *str);
Expr* pExpr3(FILE *inp);
Expr* pExpr3(const char *str);
Expr* pExpr1(FILE *inp);
Expr* pExpr1(const char *str);
Expr* pExpr2(FILE *inp);
Expr* pExpr2(const char *str);
Expr* pExpr(FILE *inp);
Expr* pExpr(const char *str);
Expr* pExpr7(FILE *inp);
Expr* pExpr7(const char *str);
Expr* pExpr5(FILE *inp);
Expr* pExpr5(const char *str);
Expr* pExpr6(FILE *inp);
Expr* pExpr6(const char *str);
Expr* pExpr4(FILE *inp);
Expr* pExpr4(const char *str);
ListAbstractionField_* pListAbstractionField_(FILE *inp);
ListAbstractionField_* pListAbstractionField_(const char *str);
AbstractionField_* pAbstractionField_(FILE *inp);
AbstractionField_* pAbstractionField_(const char *str);
ListWhereField_* pListWhereField_(FILE *inp);
ListWhereField_* pListWhereField_(const char *str);
WhereField_* pWhereField_(FILE *inp);
WhereField_* pWhereField_(const char *str);
ListRecordField_* pListRecordField_(FILE *inp);
ListRecordField_* pListRecordField_(const char *str);
RecordField_* pRecordField_(FILE *inp);
RecordField_* pRecordField_(const char *str);
ListVariantField_* pListVariantField_(FILE *inp);
ListVariantField_* pListVariantField_(const char *str);
VariantField_* pVariantField_(FILE *inp);
VariantField_* pVariantField_(const char *str);
Statement* pStatement(FILE *inp);
Statement* pStatement(const char *str);
ListStatement* pListStatement(FILE *inp);
ListStatement* pListStatement(const char *str);
ListType* pListType(FILE *inp);
ListType* pListType(const char *str);
Type* pType(FILE *inp);
Type* pType(const char *str);
ListRecordTypeField_* pListRecordTypeField_(FILE *inp);
ListRecordTypeField_* pListRecordTypeField_(const char *str);
RecordTypeField_* pRecordTypeField_(FILE *inp);
RecordTypeField_* pRecordTypeField_(const char *str);
ListVariantTypeField_* pListVariantTypeField_(FILE *inp);
ListVariantTypeField_* pListVariantTypeField_(const char *str);
VariantTypeField_* pVariantTypeField_(FILE *inp);
VariantTypeField_* pVariantTypeField_(const char *str);


#endif
